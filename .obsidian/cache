{"files":{"Actix Framework.md":{"mtime":1595367281653.201,"size":292,"hash":"a2ec4b4677c7d9d34723034ae805910a4fe1dd2f946a572813414b7bd623f1a2"},"Actor Model.md":{"mtime":1595367281653.6016,"size":503,"hash":"90c44818e2e0cb2d6e5651171efa994a0e8287abfd057e9a7c9fa82ed6405e6f"},"How to create a SystemService in Actix.md":{"mtime":1595367281653.9612,"size":1174,"hash":"fe5363d60183e0d6016c933e0807b01d7eb2aad31c81e6ac681b29f15b10cd10"},"How to create a Websocket Actor in Actix.md":{"mtime":1595367281654.333,"size":1313,"hash":"8e2a05859da632feec6a261436bac619c459d9226ca9a1c44b409262957fde08"},"How to create an Actor in Actix.md":{"mtime":1595367281654.677,"size":1289,"hash":"59c409b5e64612a721aa0e73ff8dab0c1021f36d3bdfc624c5cc9f0d23c44555"},"Markdown parser using Nom.md":{"mtime":1595367757502.3965,"size":1532,"hash":"6b7f77640bf6a3a8ea7cd356e71e6e463351e84e5cf1848b3ad07760405212ea"},"Nom Parser.md":{"mtime":1595367281655.356,"size":282,"hash":"0e8e0bf47e879572a0c0d79e124137890695e44fd2972a64f65232767afb5242"},"Notes on Actix ActorFuture.md":{"mtime":1595367281655.6785,"size":1041,"hash":"85ed5b24b95e81a8358680c557e212e0f60104c5b0f64664673bece42962a9d6"},"Parser Combination.md":{"mtime":1595367281656.0015,"size":17,"hash":"b5e481013ea790053f14bf277307650c181c18c6c5ef441aaf3e3e97fd95c8c5"},"Parser.md":{"mtime":1595367281656.3982,"size":92,"hash":"8ffaea9e14c88fa6b342b78911bace6b0848523d58f4ad8f63cbd4376a873ae2"}},"metadata":{"a2ec4b4677c7d9d34723034ae805910a4fe1dd2f946a572813414b7bd623f1a2":{"links":[{"line":2,"link":"Actor Model","original":"[[Actor Model]]","displayText":"","beforeContext":"Actix Framework is a Rust actor framework that help you build application using ","afterContext":"."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#actor-model"}],"headings":[]},"90c44818e2e0cb2d6e5651171efa994a0e8287abfd057e9a7c9fa82ed6405e6f":{"links":[{"line":2,"link":"concurrent computational model","original":"[[concurrent computational model]]","displayText":"","beforeContext":"Actor Model is a ","afterContext":" where every unit is considered as an actor, each actor can send and receives messages to and from each other actors, and it do some computation based on the messages it received, or create even more actors."}],"embeds":[],"tags":[{"line":0,"tag":"#actor-model"},{"line":0,"tag":"#concurrency"},{"line":0,"tag":"#system-design"}],"headings":[]},"fe5363d60183e0d6016c933e0807b01d7eb2aad31c81e6ac681b29f15b10cd10":{"links":[{"line":2,"link":"Actix Framework","original":"[[Actix Framework]]","displayText":"","beforeContext":"In ","afterContext":", an actor can be registered as a service, which help it run automatically. There are two types of service, ArbiterService, which is unique per arbiter, and SystemService, which is unique per system."},{"line":33,"link":"Notes on Actix ActorFuture","original":"[[Notes on Actix ActorFuture]]","displayText":"","beforeContext":"The return type of from_registry() is an Addr. For more details about how to handle send messages, see ","afterContext":"."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#actix"},{"line":0,"tag":"#actor-model"}],"headings":[]},"8e2a05859da632feec6a261436bac619c459d9226ca9a1c44b409262957fde08":{"links":[{"line":2,"link":"Actix Framework","original":"[[Actix Framework]]","displayText":"","beforeContext":"To handle WebSocket in ","afterContext":" you need to create a WebSocket ActorWebSocket Actor. Each actor will be responsible for each connected client."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#actix"},{"line":0,"tag":"#actor-model"},{"line":0,"tag":"#websocket"}],"headings":[]},"59c409b5e64612a721aa0e73ff8dab0c1021f36d3bdfc624c5cc9f0d23c44555":{"links":[{"line":2,"link":"Actix Framework","original":"[[Actix Framework]]","displayText":"","beforeContext":"To create an Actor in ","afterContext":") we first create a struct, then implement Actor trait for it. An actor has a Context, is where it run, and we can control the life cycle of it via the context."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#actix"},{"line":0,"tag":"#actor-model"}],"headings":[]},"766e1aeec6cada8169fb62ff1c45503090db499a502bfa716e2fc97f5385492a":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read."},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"0e8e0bf47e879572a0c0d79e124137890695e44fd2972a64f65232767afb5242":{"links":[{"line":4,"link":"Parser Combination","original":"[[Parser Combination]]","displayText":"","beforeContext":"It use ","afterContext":" technique."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#parser"},{"line":0,"tag":"#nom"}],"headings":[]},"85ed5b24b95e81a8358680c557e212e0f60104c5b0f64664673bece42962a9d6":{"links":[],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#actix"},{"line":0,"tag":"#actor-model"}],"headings":[]},"b5e481013ea790053f14bf277307650c181c18c6c5ef441aaf3e3e97fd95c8c5":{"links":[],"embeds":[],"tags":[{"line":0,"tag":"#parser"},{"line":0,"tag":"#compiler"}],"headings":[]},"8ffaea9e14c88fa6b342b78911bace6b0848523d58f4ad8f63cbd4376a873ae2":{"links":[],"embeds":[],"tags":[{"line":0,"tag":"#parser"},{"line":0,"tag":"#compiler"}],"headings":[]},"04b6d2d60119aa767baaa968c3eb8745fd81d9cd262728b879acc939158e507e":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a v"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a v"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"3c7606882a96a184017c7e0b897da826ead61a914e848fcfa4135c05238491c8":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good plac"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good plac"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"9987ab40572cdc1722fb1829264094f1b74e7f86a421d16dc3d3d851d02cff4c":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"ab355360beb64ae3bb8f798a4d2b049dbc6b89fe8f6fe57e4e27d3c8429b794a":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start getting the ide"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start getting the ide"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"2d9131b341bba2b481983e5a411fe113b8ec8093ccc42d5d1f103d288136b167":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start w"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start w"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"d3d77bfb263309895c157833f6b3e6e30dbef1931bc77caff643c314eaa43a5e":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start when you"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"b3d01b14fd89de19de351ea57fb3b2ba95065ddfb4417f578328c025e5ee3ee4":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea"}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"114feed37c112521b61e8ef3a0bee01af9890c8d773bcd009f91af534b9a32ed":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of Parser C"},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of Parser C"},{"line":4,"link":"Parser C","original":"[[Parser C]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of ","afterContext":""}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]},"6b7f77640bf6a3a8ea7cd356e71e6e463351e84e5cf1848b3ad07760405212ea":{"links":[{"line":4,"link":"Parser","original":"[[Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown ","afterContext":" written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of Parser Combination."},{"line":4,"link":"Nom Parser","original":"[[Nom Parser]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses ","afterContext":". It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of Parser Combination."},{"line":4,"link":"Parser Combination","original":"[[Parser Combination]]","displayText":"","beforeContext":"This is a source code of a Markdown Parser written in Rust and uses Nom Parser. It’s very clear and easy to read. And it’s a very good place to start when you want to get the idea of ","afterContext":"."}],"embeds":[],"tags":[{"line":0,"tag":"#rust"},{"line":0,"tag":"#nom"},{"line":0,"tag":"#parser"}],"headings":[]}},"algorithmVersion":9}