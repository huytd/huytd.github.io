{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/nosql-injection","result":{"data":{"brainNote":{"slug":"nosql-injection","title":"NoSQL Injection","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"NoSQL Injection\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#owasp #security #database\"), mdx(\"p\", null, \"NoSQL databases does not use SQL to perform queries, but it still uses user's input to perform actions, so it also vulnerable to attack if input sanitization is not properly performed.\"), mdx(\"p\", null, \"For example, if you're using MongoDB and you're writing a user authentication feature, to verify a user login credentials, you query the DB by some query like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const query = {\\n    username: req.body.username,\\n    password: req.body.password\\n}\\n\\nUser.find(query, (err, user) => {\\n    if (err) {\\n        // login failed\\n    } else {\\n        // login success\\n    }\\n});\\n\")), mdx(\"p\", null, \"This query seems fine, but if an attacker know the fact that you're using MongoDB, they can ultilize its query language to bypass password checking by sending some query data like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n    \\\"username\\\": \\\"victim\\\",\\n    \\\"password\\\": {\\\"$ne\\\": 1}\\n}\\n\")), mdx(\"p\", null, \"Even worst, some NoSQL databases like MongoDB are tightly integrated with the  languages like JavaScript, it supports evaluation of JavaScript code in some context, if user's input is not handled properly, the attacker could be able to execute harmful code within your server application.\"), mdx(\"p\", null, \"To protecting against NoSQL injection attacks, there are various things you can do:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always sanitize user's input to escape dangarous characters\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using typed input instead of plain strings in queries\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Minimizing privileges of the application\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Disable JavaSCript evaluation for databases like MongoDB if possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"...\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"References:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nullsweep.com/a-nosql-injection-primer-with-mongo/\"\n  }), \"Null Sweep - A NoSQL Injection Primer (with Mongo)\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"nosql-injection"}},"staticQueryHashes":[]}