{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/dynamic-programming-divisor-game","result":{"data":{"brainNote":{"slug":"dynamic-programming-divisor-game","title":"Dynamic Programming - Divisor Game","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dynamic Programming - Divisor Game\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#algorithm #dynamic-programming\"), mdx(\"p\", null, \"Leetcode URL: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://leetcode.com/problems/divisor-game/\"\n  }), \"https://leetcode.com/problems/divisor-game/\")), mdx(\"h2\", null, \"Problem Statement\"), mdx(\"p\", null, \"Alice and Bob take turns playing a game, with Alice starting first.\"), mdx(\"p\", null, \"Initially, there is a number \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" on the chalkboard. On each player's turn, that player makes a move consisting of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choosing any \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"0 < x < N\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"N % x == 0\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replacing the number \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"N\"), \" on the chalkboard with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"N - x\"), \".\")), mdx(\"p\", null, \"Also, if a player cannot make a move, they lose the game.\"), mdx(\"p\", null, \"Return \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"True\"), \" if and only if Alice wins the game, assuming both players play optimally.\"), mdx(\"p\", null, \"Example 1:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: 2\\nOutput: true\\nExplanation: Alice chooses 1, and Bob has no more moves.\\n\")), mdx(\"p\", null, \"Example 2:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Input: 3\\nOutput: false\\nExplanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.\\n\")), mdx(\"h2\", null));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"dynamic-programming-divisor-game"}},"staticQueryHashes":[]}