{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/react-inside-a-backbone-view","result":{"data":{"brainNote":{"slug":"react-inside-a-backbone-view","title":"React inside a Backbone View","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React inside a Backbone View\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#ui #javascript\"), mdx(\"p\", null, \"The idea is, use React's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"render\"), \" function to render the view on top of a Backbone view, it's surprisingly easy:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import {render} from 'react';\\n\\nexport const ReactWrapper = Backbone.Layout.extend({\\n  className : 'react-view',\\n\\n  renderTemplate : function(){},\\n\\n  afterRender : function(){\\n    render(this.template(), this.el, this.el);\\n  },\\n\\n  // this helps make sure `componentWillUnmount` is called if a higher level\\n  // backbone component removes child views, which can happen during routes\\n  // and other such events\\n  cleanup : function(){\\n    render(null, this.el, this.el);\\n  }\\n});\\n\")), mdx(\"p\", null, \"And from now on, when we create a new Backbone view, we can just use JSX inside:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"(function() {\\n\\n  const React = require('react');\\n\\n  module.exports = ReactWrapper.extend({\\n    template: function() {\\n      return <div>Hello World</div>;\\n    }\\n  });\\n\\n}());\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"react-inside-a-backbone-view"}},"staticQueryHashes":[]}