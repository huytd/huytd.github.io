{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/operating-system-notes","result":{"data":{"brainNote":{"slug":"operating-system-notes","title":"Operating System Notes","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Operating System Notes\",\n  \"aliases\": [\"Operating System\", \"OS\", \"operating system\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#os #system-design #engineering\"), mdx(\"h2\", null, \"Components of an Operating System\"), mdx(\"p\", null, \"Not all systems are the same, but most will have these components:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Process Management\"), \": manage the lifecycle of user and system\\nprocesses, provide mechanism for process synchronization,\\ncommunication,...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Main-memory Management\"), \": keep track of which part of memory are\\nbeing used by which process or user, handle the allocation and\\ndeallcation of memory as needed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"File Management\"), \": Handle file management (creation, deletion),\\nprovide the primitives for file manipulation, support file mapping,\\nbackup,...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"I/O System Management\"), \": Manage and control other I/O devices,\\nprovide an interface to communication between the devices and the\\nuser,...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Secondary Storage Management\"), \": These are storage devices such as\\ndisks or other media, manage the space and allocation, scheduling\\nrequest for acess.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Networking\"), \": Manage and control the communication with network\\ndevices, interfaces,...\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Protection System\"), \": Provide a mechanism to control the access\\nbetween programs, processes, users to the resources of the system.\")), mdx(\"h2\", null, \"Resources Allocation\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Time-multiplexing\"), \": Each program receives control of the resources for\\na certain amount of time.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Space-multiplexing\"), \": Resources can be divided into smaller units. Each\\nprogram being allocated exclusive control of different unit of\\nresources at a time.\"), mdx(\"p\", null, \"Memory and disks are example of space-mutiplexed resources. The\\nOperating System take the responsibility for allocating resources.\"), mdx(\"h2\", null, \"System Calls\"), mdx(\"p\", null, \"System calls provide an interface between the processes and the\\noperating system. They allow user-level processes perform tasks from\\ninner levels. For more details, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/system-call\"\n  }), \"System Call\"), \".\"), mdx(\"h2\", null, \"Process\"), mdx(\"p\", null, \"Process is the unit of work in the system, it's managed by the\\noperating system, a program is part of a process. For more details,\\nsee \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/process\"\n  }), \"Process\"), \".\"), mdx(\"h2\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operating System Concepts, 9th edition\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.personal.kent.edu/~rmuhamma/OpSystems/os.html\"\n  }), \"Operating Systems Lecture Notes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://web.stanford.edu/~ouster/cgi-bin/cs140-spring20/index.php\"\n  }), \"Stanford CS 140: Operating Systems\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/\"\n  }), \"Operating Systems Course Notes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-828-operating-system-engineering-fall-2012/\"\n  }), \"MIT Operrating System Engineering Course\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Process","slug":"process","childMdx":{"excerpt":"#os #system-design #engineering Process is the unit of work in a computer system, it's managed by the\n Operating System . Anatomy of a…"}},{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've been…"}}],"outboundReferenceNotes":[{"title":"System Call","slug":"system-call","childMdx":{"excerpt":"#os #system-design #engineering"}},{"title":"Process","slug":"process","childMdx":{"excerpt":"#os #system-design #engineering Process is the unit of work in a computer system, it's managed by the\n Operating System . Anatomy of a…"}}]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"operating-system-notes"}},"staticQueryHashes":[]}