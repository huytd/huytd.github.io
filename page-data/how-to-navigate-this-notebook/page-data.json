{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/how-to-navigate-this-notebook","result":{"data":{"brainNote":{"slug":"how-to-navigate-this-notebook","title":"How to navigate this notebook","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to navigate this notebook\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hey, in case you do not know, the navigation system of this notebook is inspired by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes\"\n  }), \"Andy's Working notes\"), \".\"), mdx(\"p\", null, \"Although he didn't open source his site, there's some alternatives such as this \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/gatsby-theme-andy/\"\n  }), \"Gatsby theme\"), \", and this notebook is using it. You can read more about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/how-i-built-this-notebook\"\n  }), \"How I built this notebook\"), \".\"), mdx(\"hr\", null), mdx(\"p\", null, \"These notes are linked together via an internal link, for example: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/fuzzy-testing\"\n  }), \"Fuzzy Testing\"), \". And the external links are marked with an icon on the right, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://huy.rocks\"\n  }), \"just like this\"), \".\"), mdx(\"p\", null, \"This site starts with a home page with a lists of notes, sorted by last modified time.\"), mdx(\"p\", null, \"When you follow an internal link, a new page will be opened on the right side of the current note. As you go deeper to the rabbit hole, pages are stacked.\"), mdx(\"p\", null, \"Use your browser's back button to navigate back.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've been…"}}],"outboundReferenceNotes":[{"title":"how-i-built-this-notebook","slug":"how-i-built-this-notebook","childMdx":{"excerpt":""}},{"title":"Fuzzy Testing","slug":"fuzzy-testing","childMdx":{"excerpt":"#testing #engineering Fuzz Testing is a testing method that instead of writing test cases with a predefined mock data, you generate the test…"}}]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"how-to-navigate-this-notebook"}},"staticQueryHashes":[]}