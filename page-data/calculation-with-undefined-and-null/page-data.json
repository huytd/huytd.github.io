{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/calculation-with-undefined-and-null","result":{"data":{"brainNote":{"slug":"calculation-with-undefined-and-null","title":"Calculation with undefined and null","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Calculation with undefined and null\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#javascript \"), mdx(\"p\", null, \"There's an important different between \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \" when it comes to calculation.\"), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"10 - null === 10\\n10 - undefined === NaN\\n\")), mdx(\"p\", null, \"So, if you set the initial value of some variable to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \" and later on, use it in a calculation, you need to think about the outcome.\"), mdx(\"p\", null, \"This is also important for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jQuery\"), \" user when you migrate from older version to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jQuery 3+\"), \".\"), mdx(\"p\", null, \"There's a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jquery.com/upgrade-guide/3.0/#breaking-change-return-values-on-empty-sets-are-undefined\"\n  }), \"breaking change\"), \" that jQuery will return \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"undefined\"), \" for methods like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"width()\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"innerWidth()\"), \",... if the caller is empty, for example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// before 3\\n$(\\\"non-exist\\\").width() === null\\n$().width() === null\\n\\n// after 3+\\n$(\\\"non-exist\\\").width() === undefined\\n$().width() === undefined\\n\")), mdx(\"p\", null, \"If you use these values in calculation, you'll get into trouble:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const innerWidth = $(\\\"selector\\\").outerWidth() - 50; // gonna be NaN\\n\")), mdx(\"p\", null, \"To make sure your code always works as expected, use fallback:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const innerWidth = ($(\\\"selector\\\").outerWidth() || 0) - 50; // -50\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"calculation-with-undefined-and-null"}},"staticQueryHashes":[]}