{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/dark-mode-for-tailwind","result":{"data":{"brainNote":{"slug":"dark-mode-for-tailwind","title":"Dark Mode for Tailwind","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dark Mode for Tailwind\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#ui \"), mdx(\"p\", null, \"There's already an article showing how to apply dark mode in\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tailwindcss.com/\"\n  }), \"Tailwind CSS\"), \" based on OS's setting. But in a real application, you might want to have fully control over it, since user might want to use dark mode in your application only, not enable it system wide.\"), mdx(\"p\", null, \"The solution would be, put a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dark-mode\"), \" class to some top level\\ncontainer such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<body>\"), \" tag, and add a variant in Tailwind CSS, so it\\ncould be used like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<div class=\\\"bg-gray-100 dark-mode:bg-gray-800\\\"></div>\\n\")), mdx(\"p\", null, \"To do so, create a new plugin in your \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tailwind.config.js\"), \" like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"plugins: [\\n    plugin(function({ addVariant, e }) {\\n        addVariant('dark-mode', function({ modifySelectors, separator }) {\\n            modifySelectors(function({ className }) {\\n                return `.dark-mode .${e(`dark-mode${separator}${className}`)}`;\\n            })\\n        })\\n    })\\n]\\n\")), mdx(\"p\", null, \"You might want to apply this variant for whatever attribute you want\\nto use, for example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"variants: {\\n    backgroundColor: [ 'hover', 'focus', 'dark-mode' ],\\n    textColor: [ 'hover', 'focus', 'dark-mode' ],\\n    borderColor: [ 'hover', 'focus', 'dark-mode' ],\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"dark-mode-for-tailwind"}},"staticQueryHashes":[]}