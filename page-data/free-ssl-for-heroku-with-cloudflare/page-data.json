{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/free-ssl-for-heroku-with-cloudflare","result":{"data":{"brainNote":{"slug":"free-ssl-for-heroku-with-cloudflare","title":"Free SSL for Heroku with Cloudflare","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Free SSL for Heroku with Cloudflare\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#heroku #operating\"), mdx(\"p\", null, \"Heroku support custom domain for free Dynos, but withou the SSL\\ncertificate, is not so you'll end up serving your app on your custom\\ndomain via HTTP protocol, not so great.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"images/heroku-ssl.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"You can work around by letting Cloudflare handle the SSL part.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"images/cloudflare-ssl.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"First, in your Heroku application setting, add a new custom\\ndomain. Heroku will provide a DNS record so you can set it up on\\nCloudflare.\"), mdx(\"p\", null, \"In Cloudflare DNS, add a new CNAME record with the information Heroku\\njust provided. Don't forget to turn on Full SSL and Always HTTPS mode\\nfor your domain.\"), mdx(\"p\", null, \"Now you'll get your application serving with HTTPS on a custom domain.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"free-ssl-for-heroku-with-cloudflare"}},"staticQueryHashes":[]}