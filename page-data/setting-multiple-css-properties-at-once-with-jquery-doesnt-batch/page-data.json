{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/setting-multiple-css-properties-at-once-with-jquery-doesnt-batch","result":{"data":{"brainNote":{"slug":"setting-multiple-css-properties-at-once-with-jquery-doesnt-batch","title":"Setting multiple CSS properties at once with jQuery doesn't batch","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting multiple CSS properties at once with jQuery doesn't batch\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#ui \"), mdx(\"p\", null, \"There's a trick that was suggested in a few articles on the internet, that whenever you should modify a lot of CSS properties, you should batch them in one call:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  // instead of this\\n  $('body').css('backgound-color', '#F00');\\n  $('body').css('width', 100);\\n  $('body').css('height', 300);\\n\\n  // do this\\n  $('body').css({\\n    'background-color': '#F00',\\n    'width': 100,\\n    'height': 300\\n  });\\n\")), mdx(\"p\", null, \"By groupping them in one place, we hope that jQuery is smart enough to batch everything into one call.\"), mdx(\"p\", null, \"Turned out, it's not.\"), mdx(\"p\", null, \"If you look at jQuery source code, where the call to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jQuery.css\"), \" starts:\"), mdx(\"p\", null, \"File: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jquery/jquery/blob/1b74660f730d34bf728094c33080ff406427f41e/src/css.js#L396\"\n  }), \"jquery/src/css.js#L396\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  css: function( name, value ) {\\n    return access( this, function( elem, name, value ) {\\n    ...\\n\")), mdx(\"p\", null, \"It will then called the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"access\"), \" function to determine if the passed parameter is a single style change or a bulk changes:\"), mdx(\"p\", null, \"File: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jquery/jquery/blob/master/src/core/access.js#L10\"\n  }), \"jquery/src/core/access.js#L10\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\n    ...\\n    // Sets many values\\n    if ( toType( key ) === \\\"object\\\" ) {\\n      chainable = true;\\n      for ( i in key ) {                                        // <===\\n        access( elems, fn, i, key[ i ], true, emptyGet, raw );  // <===\\n      }\\n\")), mdx(\"p\", null, \"As you can see here, jQuery didn't attempt to batch anything when it received a key-valued object passed into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".css()\"), \" method, and eventually, it changes the CSS properties directly via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"element.style.<property> = value\"), \":\"), mdx(\"p\", null, \"File: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/jquery/jquery/blob/master/src/css.js#L256\"\n  }), \"jquery/src/css.js#L256\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  if ( isCustomProp ) {\\n    style.setProperty( name, value );\\n  } else {\\n    style[ name ] = value;\\n  }\\n\")), mdx(\"p\", null, \"So, what's the point of batching the CSS properties into one \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".css()\"), \" call here?\"), mdx(\"p\", null, \"It's the selector, since our initial example is too simple, let me show you another one:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  $('.container h3[data-tag=\\\"product-header\\\"]:not(.hidden) a[href]').css('background', '#F00');\\n  $('.container h3[data-tag=\\\"product-header\\\"]:not(.hidden) a[href]').css('width', 500);\\n  $('.container h3[data-tag=\\\"product-header\\\"]:not(.hidden) a[href]').css('height', 30);\\n\")), mdx(\"p\", null, \"Do you see the problem now? Yes, that monsterous query selector! Querying a DOM element is costly, so don't do it repeatly, batching them all in to one call will save you the cost of querying.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  $('.container h3[data-tag=\\\"product-header\\\"]:not(.hidden) a[href]').css({\\n    'background-color': '#F00',\\n    'width': 500,\\n    'height': 30\\n  });\\n\")), mdx(\"p\", null, \"At least, we solved some performance issue, althought it's not the one we intended to solve, but better than nothing.\"), mdx(\"p\", null, \"Hail jQuery!\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"setting-multiple-css-properties-at-once-with-jquery-doesnt-batch"}},"staticQueryHashes":[]}