{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/implementing-hardware-level-key-lock","result":{"data":{"brainNote":{"slug":"implementing-hardware-level-key-lock","title":"Implementing hardware level key lock","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Implementing hardware level key lock\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#hardware #keyboard\"), mdx(\"p\", null, \"One of the features of TMK/QMK firmware is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"KC_LOCK\"), \" key, when you hold a key, and press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"KC_LOCK\"), \", that key become persistent even if you release it. Just like the caps lock key.\"), mdx(\"p\", null, \"This is pretty helpful for Emacs user, so they can move freely without holding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl\"), \" key.\"), mdx(\"p\", null, \"To implement it, we can just add a new flag check, for example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrlLockOn\"), \", to where we handle \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl\"), \" keypress:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"-    else if (keys[i].code == CTRL_KEY) {\\n+    else if (keys[i].code == CTRL_KEY || ctrlLockOn) {\\n      modifiers |= MODIFIERKEY_CTRL;\\n    }\\n\")), mdx(\"p\", null, \"And triggering \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrlLockOn\"), \" where we desired. For example, I want to toggle \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrlLockOn\"), \" when user pressed \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Fn + Ctrl + Shift + Alt\"), \", so the code would be:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"+    if (keys[i].code == FN_KEY) {\\n+      fn = 1;\\n+    }\\n\\n...\\n\\n+    if (modifiers == CTRL_KEY | ALT_KEY | SHIFT_KEY && fn == 1) {\\n+      ctrlLockOn = ctrlLockOn ? 0 : 1;\\n+    }\\n\")), mdx(\"p\", null, \"By doing this, we can also press the above sequence again to turn off locking.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"implementing-hardware-level-key-lock"}},"staticQueryHashes":[]}