{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/control-philips-smart-light-bulb-via-udp","result":{"data":{"brainNote":{"slug":"control-philips-smart-light-bulb-via-udp","title":"Control Philips Smart Light Bulb via UDP","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Control Philips Smart Light Bulb via UDP\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I just picked up a couple of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.usa.lighting.philips.com/consumer/smart-wifi-led\"\n  }), \"Philips Wiz Light Bulbs\"), \" from HomeDepot. They're cheap compared to a Philips Hue or other smart lights but worked well.\"), mdx(\"p\", null, \"One thing, they need to be connected and controlled via a mobile app. Like many other computer nerds, I want to do it right on my laptop, but there is no public documentation on how to do it from the manufacturer.\"), mdx(\"p\", null, \"But again, it's 2020, and the product is on the market for quite a long time, so as I expected, the people like already figured out how to do it and posted them online everywhere. In fact, it's surprisingly (and worryingly) easy.\"), mdx(\"p\", null, \"All we need to do is send a JSON payload to the light bulb via a UDP request on port 38899. No password or authentication is required!\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n    \\\"id\\\": 1,\\n    \\\"method\\\": \\\"setPilot\\\",\\n    \\\"params\\\": {\\n        \\\"r\\\": 255,\\n        \\\"g\\\": 255,\\n        \\\"b\\\": 255,\\n        \\\"w\\\": 255,\\n        \\\"c\\\": 255\\n    }\\n}\\n\")), mdx(\"p\", null, \"We can do it right on the terminal emulator by something like:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"echo \\\"{json payload}\\\" | nc -u -w 1 <bulb-ip> 38899\\n\")), mdx(\"p\", null, \"For example, the following command changes the light color to 4800k and 70% dimming, with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"10.0.0.5\"), \" is the IP address of my light bulb:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"echo '{\\\"id\\\":1, \\\"method\\\":\\\"setPilot\\\", \\\"params\\\": { \\\"temp\\\": 4800, \\\"dimming\\\": 70 }}' | nc -u -w 1 10.0.0.5 38899\\n\")), mdx(\"p\", null, \"If you're not a bash fan, let's try some JavaScript:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const dgram = require('dgram');\\nconst socket = dgram.createSocket('udp4');\\n\\nconst send = (opts, ip) => socket.send(`{\\n  \\\"id\\\": ${Math.floor(Math.random() * 10)},\\n  \\\"method\\\": \\\"setPilot\\\",\\n  \\\"params\\\": ${JSON.stringify(opts)}\\n}`, 38899, \\\"10.0.0.5\\\");\\n\\nsend({\\n  temp: 4800,\\n  dimming: 70\\n});\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"References:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/eritbh/wiz-lighting-experiments\"\n  }), \"https://github.com/eritbh/wiz-lighting-experiments\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/sbidy/pywizlight\"\n  }), \"https://github.com/sbidy/pywizlight\"))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"control-philips-smart-light-bulb-via-udp"}},"staticQueryHashes":[]}