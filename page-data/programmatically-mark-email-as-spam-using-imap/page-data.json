{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/programmatically-mark-email-as-spam-using-imap","result":{"data":{"brainNote":{"slug":"programmatically-mark-email-as-spam-using-imap","title":"Programmatically mark email as spam using IMAP","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Programmatically mark email as spam using IMAP\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#mail\"), mdx(\"p\", null, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webapps.stackexchange.com/a/14267\"\n  }), \"StackOverflow - Does moving a mail to the IMAP spam folder trains Gmail's spam filter?\")), mdx(\"p\", null, \"To mark email as spam using IMAP, just move that email to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Gmail]/Spam\"), \" folder. This is equivalent to click on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Report Spam\"), \"\\nbutton in Gmail web client.\"), mdx(\"p\", null, \"Moving an email from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Gmail]/Spam\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Gmail]/Trash\"), \" will remove the\\nreport spam effect.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"programmatically-mark-email-as-spam-using-imap"}},"staticQueryHashes":[]}