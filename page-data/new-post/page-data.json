{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/new-post","result":{"data":{"brainNote":{"slug":"new-post","title":"Automate your static blog deployment with Github Page","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Automate your static blog deployment with Github Page\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Previously, I have a Gatsby blog managed in a private repository named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"huytd/blog\"), \", and everytime I write something, I had to run the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby build\"), \" command and push everything in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"public\"), \" folder (Gatsby's default output folder) into a public Github Pages repository named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"huytd/huytd.github.io\"), \".\"), mdx(\"p\", null, \"I want to setup a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/features/actions\"\n  }), \"Github Action\"), \" to automate this workflow, so all I need to do is just write and push. Or when I use some online markdown editor like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vim.md\"\n  }), \"vim.md\"), \", I can just forget about pushing stuff too.\"), mdx(\"p\", null, \"The idea of the workflow would be:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Checkout the private \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"huytd/blog\"), \" repository into tho root folder\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Checkout the public \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"huytd/huytd.github.io\"), \" repository into \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/public\"), \" folder\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"gatsby build\"), \" in the root folder\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Commit and push the changes in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"public\"), \" folder to the public repository\")), mdx(\"p\", null, \"Here's the full workflow:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"name: Gatsby Publish\\n\\non:\\n  push:\\n    branches:\\n      - master\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - uses: actions/checkout@v2\\n        with:\\n          repository: 'huytd/huytd.github.io'\\n          token: ${{ secrets.ACCESS_TOKEN }}\\n          path: 'public'\\n      - name: Setting up\\n        run: |\\n         npm install\\n         npm run build\\n      - name: Push to Github Pages\\n        run: |\\n         cd public\\n         git config user.name github-actions\\n         git config user.email github-actions@github.com\\n         git add .\\n         git commit -m \\\"generated\\\"\\n         git push\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"new-post"}},"staticQueryHashes":[]}