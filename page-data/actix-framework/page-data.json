{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/actix-framework","result":{"data":{"brainNote":{"slug":"actix-framework","title":"Actix Framework","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Actix Framework\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tags: #rust #actor-model\"), mdx(\"p\", null, \"Actix Framework is a Rust actor framework that help you build application using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/actor-model\"\n  }), \"Actor Model\"), \".\"), mdx(\"p\", null, \"The Actix eco system are built on top of Actix, for example: Actix Web, Actix WebSocket.\"), mdx(\"p\", null, \"To understand how actix crates works, you must understand how things works in Actix.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"How to create a SystemService in Actix","slug":"how-to-create-a-systemservice-in-actix","childMdx":{"excerpt":"#rust, #actix, #actor-model In  Actix Framework , an actor can be registered as a service, which help it run automatically. There are two…"}},{"title":"How to create a Websocket Actor in Actix","slug":"how-to-create-a-websocket-actor-in-actix","childMdx":{"excerpt":"#rust, #actix, #actor-model, #websocket To handle WebSocket in  Actix Framework  you need to create a  WebSocket Actor . Each actor will be…"}},{"title":"How to create an Actor in Actix","slug":"how-to-create-an-actor-in-actix","childMdx":{"excerpt":"#rust, #actix, #actor-model To create an Actor in  Actix Framework ) we first create a struct, then implement  Actor  trait for it. An actor…"}},{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've been…"}}],"outboundReferenceNotes":[{"title":"Actor Model","slug":"actor-model","childMdx":{"excerpt":"#actor-model #concurrency #system-design #engineering Actor Model is a  concurrent computational model  where every unit is considered as an…"}}]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"actix-framework"}},"staticQueryHashes":[]}