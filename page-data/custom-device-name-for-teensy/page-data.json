{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/custom-device-name-for-teensy","result":{"data":{"brainNote":{"slug":"custom-device-name-for-teensy","title":"Custom device name for Teensy","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Custom device name for Teensy\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#hardware \"), mdx(\"p\", null, \"Original: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://forum.pjrc.com/threads/23796-How-to-change-Teensy-3-0-PRODUCT_NAME\"\n  }), \"How to change Teensy 3.0 product name - PJRC Forum\")), mdx(\"p\", null, \"By default, when you use Teensyduino, the device name will be appeared as USB Serial or something.\"), mdx(\"p\", null, \"To change this to your own product name, create a new tab in Arduino IDE, name it something ending with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".c\"), \", for example, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metadata.c\"), \". Then put the following code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#include \\\"usb_names.h\\\"\\n#define MANUFACTURER_NAME       {'S','n','a','c','k','y'}\\n#define MANUFACTURER_NAME_LEN   6\\n#define PRODUCT_NAME          {'S','n','a','c','k','y','M','i','n','i'}\\n#define PRODUCT_NAME_LEN      10\\n\\nstruct usb_string_descriptor_struct usb_string_manufacturer_name = {  2 + MANUFACTURER_NAME_LEN * 2,  3,  MANUFACTURER_NAME};\\nstruct usb_string_descriptor_struct usb_string_product_name = {  2 + PRODUCT_NAME_LEN * 2,  3,  PRODUCT_NAME};\\n\")), mdx(\"p\", null, \"Don't forget to set \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MANUFACTURER_NAME_LEN\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PRODUCT_NAME_LEN\"), \" to the actual length of your manufacturer/product name.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! This is my personal notebook. You can take a look at some of the recent articles here: Actix Framework Actor Model Atomic Designâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"custom-device-name-for-teensy"}},"staticQueryHashes":[]}