{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/cloudflare-workers-with-rust","result":{"data":{"brainNote":{"slug":"cloudflare-workers-with-rust","title":"Cloudflare Workers with Rust","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cloudflare Workers with Rust\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#rust #webassembly \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Wrangler\"), \" is Cloudflare's solution for writing, testing and deploying Worker Scripts right on your local machine. It supports many project templates, including WebAssembly in Rust.\"), mdx(\"p\", null, \"To start a new project, type:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"wrangler generate your-project <template-url>\\n\")), mdx(\"p\", null, \"Then you can run the following command to have Wrangler compile and hook up everything for you, that's including compiling your Rust module into a Wasm package and loading it up in a JavaScript worker.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"wrangler preview --watch\\n\")), mdx(\"p\", null, \"Wrangler uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm-bindgen\"), \" as a solution to export your Rust data into JavaScript. You'll need to make sure all the crates you're using supports the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm32-unknown-unknown\"), \" target.\"), mdx(\"hr\", null), mdx(\"p\", null, \"One of the thing I found after played around with Wrangler is, it's pretty hard to debug the error in your Rust code when running as a Wasm package. Yes, this isn't a Wrangler thing but a Wasm thing.\"), mdx(\"p\", null, \"For example, when a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"panic\"), \" happen, you'll get this useless error message in your JavaScript console:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Runtime Error: unreachable\\n\")), mdx(\"p\", null, \"A Wrangler project usually have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console_error_panic_hook\"), \" integrated, it's a crate that help you see a more detailed Rust error message, when it fails inside a Wasm package. To enable, just call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"utils::set_panic_hook();\"), \" where you need, for example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"#[wasm_bindgen]\\npub fn parse(content: &str) -> String {\\n+    utils::set_panic_hook();\\n...\\n }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"cloudflare-workers-with-rust"}},"staticQueryHashes":[]}