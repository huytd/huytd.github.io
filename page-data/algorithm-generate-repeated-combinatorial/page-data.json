{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/algorithm-generate-repeated-combinatorial","result":{"data":{"brainNote":{"slug":"algorithm-generate-repeated-combinatorial","title":"Algorithm - Generate repeated combinatorial","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Algorithm - Generate repeated combinatorial\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#algorithm \"), mdx(\"p\", null, \"The algorithm is simple:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Find the right most element less than n\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Increase it\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set the other right the same\")), mdx(\"p\", null, \"It can be implemented as following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const next = (r) => {\\n    let n = r.length;\\n    for (let i = n - 1; i >= 0; i--) {\\n        if (r[i] < n) {\\n            r[i]++;\\n            for (let j = i; j < n; j++) {\\n                r[j] = r[i];\\n            }\\n            return r;\\n        }\\n    }\\n     return null;\\n};\\n\")), mdx(\"p\", null, \"And here's how we would use it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"let gen = next([0, 0, 0, 0]);\\nwhile (gen != null) {\\n    console.log(gen);\\n    gen = next(gen);\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've beenâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"algorithm-generate-repeated-combinatorial"}},"staticQueryHashes":[]}