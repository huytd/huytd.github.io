{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/how-i-built-this-notebook","result":{"data":{"brainNote":{"slug":"how-i-built-this-notebook","title":"How I built this notebook","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How I built this notebook\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You may notice that this site is heavily inspired by\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes\"\n  }), \"Andy Matuschak's notes\"), \",\\nif the navigation confused you, you should take a look at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/how-to-navigate-this-notebook\"\n  }), \"How to navigate this notebook\"), \" first.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"images/note-site-overview.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"This site is powered by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/gatsby\"\n  }), \"Gatsby\"), \", the theme in use is\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/gatsby-theme-andy/\"\n  }), \"gatsby-theme-andy\"), \".\"), mdx(\"p\", null, \"All the notes are written in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"markdown\"), \" format using Emacs, I know what\\nyou're thinking, I don't use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"org-mode\"), \" on this notebook for some\\nreason, you can read more about how I use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/emacs-for-note-taking\"\n  }), \"Emacs for note-taking\"), \".\"), mdx(\"p\", null, \"The Gastby theme I'm using does not support listing all available\\nnote, and it hurts discoverability, so I wrote an indexing script get\\nthe list of all markdown files, sort them by last modification date\\nand list them all into an index file.\"), mdx(\"p\", null, \"At first, I tried to write the indexing script in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bash\"), \", it's such a\\npain, so I use JavaScript to get the job done, something like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const sorted_files = files.filter(f => f.endsWith(\\\".md\\\") && !f.startsWith(\\\"about.md\\\"))\\n  .map(filename => {\\n  return {\\n    name: filename,\\n    modified: fs.statSync(dir + filename).mtime.getTime()\\n  }\\n})\\n.sort((a, b) => b.modified - a.modified)\\n.map(f => `- [${f.name.replace(\\\".md\\\", \\\"\\\")}](/fnamereplacemd-)`)\\n.join(\\\"\\\\n\\\");\\n\")), mdx(\"p\", null, \"Finally, Gatsby build script will kick in and generate everything into\\nstatic HTML files, and push them to Github Pages.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"How to navigate this notebook","slug":"how-to-navigate-this-notebook","childMdx":{"excerpt":"Hey, in case you do not know, the navigation system of this notebook is inspired by  Andy's Working notes . Although he didn't open source…"}},{"title":"Home Page","slug":"about","childMdx":{"excerpt":"Welcome! Look like you've found my personal notebook. This is the place where you can take a peek into my mind to see what I've been…"}}],"outboundReferenceNotes":[{"title":"How to navigate this notebook","slug":"how-to-navigate-this-notebook","childMdx":{"excerpt":"Hey, in case you do not know, the navigation system of this notebook is inspired by  Andy's Working notes . Although he didn't open source…"}},{"title":"Gatsby","slug":"gatsby","childMdx":{"excerpt":"#ui #gatsby  Gatsby is a React-based site generator.  Read the docs . The usage is as simple as: Init the project with  npm init   Install…"}},{"title":"Emacs for note-taking","slug":"emacs-for-note-taking","childMdx":{"excerpt":"#note-taking #editor Previously, I use an editor called  Obsidian  to\nmaintain this notes site. Now I'm moving back to Emacs. Obsidian still…"}},{"title":"fnamereplacemd-","slug":"fnamereplacemd-","childMdx":{"excerpt":""}}]},"site":{"siteMetadata":{"title":"Huy's Notes"}}},"pageContext":{"slug":"how-i-built-this-notebook"}},"staticQueryHashes":[]}